// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: auths_queries.sql

package authsdb

import (
	"context"
)

const findByUsername = `-- name: FindByUsername :one
SELECT id, username, password, created_at FROM auths WHERE username = $1
`

func (q *Queries) FindByUsername(ctx context.Context, username string) (Auth, error) {
	row := q.db.QueryRow(ctx, findByUsername, username)
	var i Auth
	err := row.Scan(
		&i.ID,
		&i.Username,
		&i.Password,
		&i.CreatedAt,
	)
	return i, err
}

const registerUser = `-- name: RegisterUser :one
INSERT INTO
    auths (username, password)
VALUES ($1, $2)
RETURNING
    id, username, password, created_at
`

type RegisterUserParams struct {
	Username string
	Password string
}

func (q *Queries) RegisterUser(ctx context.Context, arg RegisterUserParams) (Auth, error) {
	row := q.db.QueryRow(ctx, registerUser, arg.Username, arg.Password)
	var i Auth
	err := row.Scan(
		&i.ID,
		&i.Username,
		&i.Password,
		&i.CreatedAt,
	)
	return i, err
}
